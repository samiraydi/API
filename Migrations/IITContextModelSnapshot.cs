// <auto-generated />
using System;
using IIT.Clubs.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IIT.Clubs.API.Migrations
{
    [DbContext(typeof(IITContext))]
    partial class IITContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IIT.Clubs.Models.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_creation");

                    b.Property<string>("DemaineActivite")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("demaine_activite");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("description");

                    b.Property<int>("IdFondateur")
                        .HasColumnType("int")
                        .HasColumnName("id_fondateur");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("logo_club");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("nom");

                    b.HasKey("Id");

                    b.HasIndex("IdFondateur");

                    b.ToTable("club");
                });

            modelBuilder.Entity("IIT.Clubs.Models.Evennement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClubId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("description");

                    b.Property<int>("IdOrganisateur")
                        .HasColumnType("int")
                        .HasColumnName("id_organisateur");

                    b.Property<int>("NbParticipants")
                        .HasMaxLength(20)
                        .HasColumnType("int")
                        .HasColumnName("nombre_participants");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("titre");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.HasIndex("IdOrganisateur");

                    b.ToTable("evennement");
                });

            modelBuilder.Entity("IIT.Clubs.Models.Inscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClubId")
                        .HasColumnType("int");

                    b.Property<int>("IdClub")
                        .HasMaxLength(20)
                        .HasColumnType("int")
                        .HasColumnName("id_club");

                    b.Property<int>("IdMembre")
                        .HasMaxLength(20)
                        .HasColumnType("int")
                        .HasColumnName("id_membre");

                    b.Property<int?>("MembreId")
                        .HasColumnType("int");

                    b.Property<string>("NomMembre")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("login");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.HasIndex("MembreId");

                    b.ToTable("Inscription");
                });

            modelBuilder.Entity("IIT.Clubs.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("nom");

                    b.HasKey("Id");

                    b.ToTable("material");
                });

            modelBuilder.Entity("IIT.Clubs.Models.Participation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdEvennement")
                        .HasMaxLength(20)
                        .HasColumnType("int")
                        .HasColumnName("id_evennement");

                    b.Property<int>("IdParticipant")
                        .HasMaxLength(20)
                        .HasColumnType("int")
                        .HasColumnName("id_participant");

                    b.HasKey("Id");

                    b.HasIndex("IdEvennement");

                    b.HasIndex("IdParticipant");

                    b.ToTable("Participation");
                });

            modelBuilder.Entity("IIT.Clubs.Models.Personne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_naissance");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nom_personne");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("occupation");

                    b.Property<string>("Organisation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("organisation");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("prenom_personne");

                    b.HasKey("Id");

                    b.ToTable("Personne");
                });

            modelBuilder.Entity("IIT.Clubs.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_debut");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_fin");

                    b.Property<int>("IdEvennement")
                        .HasMaxLength(20)
                        .HasColumnType("int")
                        .HasColumnName("id_evennement");

                    b.Property<int>("IdMaterial")
                        .HasMaxLength(20)
                        .HasColumnType("int")
                        .HasColumnName("id_material");

                    b.Property<int>("IdSalle")
                        .HasMaxLength(20)
                        .HasColumnType("int")
                        .HasColumnName("id_salle");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("statut");

                    b.HasKey("Id");

                    b.HasIndex("IdEvennement");

                    b.HasIndex("IdMaterial");

                    b.HasIndex("IdSalle");

                    b.ToTable("reservation");
                });

            modelBuilder.Entity("IIT.Clubs.Models.Salle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Emplacement")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("emplacement");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("nom");

                    b.HasKey("Id");

                    b.ToTable("salle");
                });

            modelBuilder.Entity("IIT.Clubs.Models.Club", b =>
                {
                    b.HasOne("IIT.Clubs.Models.Personne", "Fondateur")
                        .WithMany("Clubs")
                        .HasForeignKey("IdFondateur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fondateur");
                });

            modelBuilder.Entity("IIT.Clubs.Models.Evennement", b =>
                {
                    b.HasOne("IIT.Clubs.Models.Club", null)
                        .WithMany("Evennements")
                        .HasForeignKey("ClubId");

                    b.HasOne("IIT.Clubs.Models.Personne", "Organisateur")
                        .WithMany("Evennements")
                        .HasForeignKey("IdOrganisateur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organisateur");
                });

            modelBuilder.Entity("IIT.Clubs.Models.Inscription", b =>
                {
                    b.HasOne("IIT.Clubs.Models.Club", "Club")
                        .WithMany("Inscriptions")
                        .HasForeignKey("ClubId");

                    b.HasOne("IIT.Clubs.Models.Personne", "Membre")
                        .WithMany("Inscriptions")
                        .HasForeignKey("MembreId");

                    b.Navigation("Club");

                    b.Navigation("Membre");
                });

            modelBuilder.Entity("IIT.Clubs.Models.Participation", b =>
                {
                    b.HasOne("IIT.Clubs.Models.Evennement", "Evennement")
                        .WithMany("Participations")
                        .HasForeignKey("IdEvennement")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IIT.Clubs.Models.Personne", "Participant")
                        .WithMany("Participations")
                        .HasForeignKey("IdParticipant")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Evennement");

                    b.Navigation("Participant");
                });

            modelBuilder.Entity("IIT.Clubs.Models.Reservation", b =>
                {
                    b.HasOne("IIT.Clubs.Models.Evennement", "Evennement")
                        .WithMany("Reservations")
                        .HasForeignKey("IdEvennement")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IIT.Clubs.Models.Material", "Material")
                        .WithMany("Reservations")
                        .HasForeignKey("IdMaterial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IIT.Clubs.Models.Salle", "Salle")
                        .WithMany("Reservations")
                        .HasForeignKey("IdSalle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evennement");

                    b.Navigation("Material");

                    b.Navigation("Salle");
                });

            modelBuilder.Entity("IIT.Clubs.Models.Club", b =>
                {
                    b.Navigation("Evennements");

                    b.Navigation("Inscriptions");
                });

            modelBuilder.Entity("IIT.Clubs.Models.Evennement", b =>
                {
                    b.Navigation("Participations");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("IIT.Clubs.Models.Material", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("IIT.Clubs.Models.Personne", b =>
                {
                    b.Navigation("Clubs");

                    b.Navigation("Evennements");

                    b.Navigation("Inscriptions");

                    b.Navigation("Participations");
                });

            modelBuilder.Entity("IIT.Clubs.Models.Salle", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
